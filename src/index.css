@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  transform: scale(var(--render-scale, 1));
  transform-origin: top left;
}
/* Matrix-style background */
.matrix-bg {
  position: fixed;
  inset: 0;
  pointer-events: none;
  z-index: -1;
  background-image: linear-gradient(180deg, rgba(0,255,0,0.15) 1px, transparent 1px),
    linear-gradient(90deg, rgba(0,255,0,0.05) 1px, transparent 1px);
  background-size: 4px 4px;
  animation: matrix-fall 12s linear infinite;
}

@keyframes matrix-fall {
  from { background-position-y: 0; }
  to { background-position-y: 100%; }
}

/* Glitch effect */
.glitch {
  animation: glitch-skew 0.3s steps(2, end) 3;
}

@keyframes glitch-skew {
  0% { transform: skew(0deg); }
  50% { transform: skew(10deg); }
  100% { transform: skew(0deg); }
}

/* Particle effects */
.particle {
  position: absolute;
  bottom: 0;
  width: 4px;
  height: 4px;
  background: #00ff00;
  border-radius: 50%;
  animation: particle-rise 0.8s linear forwards;
}

@keyframes particle-rise {
  from { transform: translateY(0); opacity: 1; }
  to { transform: translateY(-150px); opacity: 0; }
}


/* Radar sweep animation */
.radar-lines::before,
.radar-lines::after {
  content: '';
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  border: 1px dashed rgba(16,185,129,0.4);
}
.radar-lines::after {
  transform: rotate(90deg);
}

.radar-sweep {
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  background: conic-gradient(rgba(16,185,129,0.4) 0deg, rgba(16,185,129,0) 60deg);
  animation: radar-rotate 2s linear infinite;
}

@keyframes radar-rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Advanced GlitchEffect animations */
.glitch-effect {
  --glitch-intensity: 5;
  --glitch-duration: 500ms;
  position: relative;
  display: inline-block;
}

.glitch-active {
  animation: glitch-shake var(--glitch-duration);
  filter: drop-shadow(calc(var(--glitch-intensity) * 1px) 0 red)
          drop-shadow(calc(var(--glitch-intensity) * -1px) 0 blue);
}

.glitch-noise {
  position: absolute;
  inset: 0;
  pointer-events: none;
  background-image: repeating-linear-gradient(
    0deg,
    rgba(255,255,255,0.05) 0px,
    rgba(255,255,255,0.05) 2px,
    rgba(0,0,0,0.05) 2px,
    rgba(0,0,0,0.05) 4px
  );
  opacity: 0;
}

.glitch-active .glitch-noise {
  animation: noise-move var(--glitch-duration);
  opacity: 0.2;
}

@keyframes glitch-shake {
  0%,100% { transform: translate(0,0); }
  10% { transform: translate(calc(var(--glitch-intensity) * -1px), calc(var(--glitch-intensity) * -1px)); }
  20% { transform: translate(calc(var(--glitch-intensity) * 1px), calc(var(--glitch-intensity) * -1px)); }
  30% { transform: translate(calc(var(--glitch-intensity) * -1px), calc(var(--glitch-intensity) * 1px)); }
  40% { transform: translate(calc(var(--glitch-intensity) * 1px), calc(var(--glitch-intensity) * 1px)); }
  50% { transform: translate(calc(var(--glitch-intensity) * -0.5px), calc(var(--glitch-intensity) * 0.5px)); }
  60% { transform: translate(calc(var(--glitch-intensity) * 0.5px), calc(var(--glitch-intensity) * -0.5px)); }
  70% { transform: translate(calc(var(--glitch-intensity) * -1px), 0); }
  80% { transform: translate(calc(var(--glitch-intensity) * 1px), 0); }
  90% { transform: translate(0, calc(var(--glitch-intensity) * 1px)); }
}

@keyframes noise-move {
  0% { transform: translate(0,0); }
  100% { transform: translate(-50%, -50%); }
}

body.high-contrast {
  filter: contrast(2);
}

body.reduce-motion * {
  animation-duration: 0s !important;
  transition-duration: 0s !important;
}

@keyframes shake {
  0%,100% { transform: translate(0,0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(2px, -2px); }
  60% { transform: translate(-2px, 2px); }
  80% { transform: translate(2px, -2px); }
}

.screen-shake {
  animation: shake 0.5s;
}

@keyframes flash-red {
  from { background: rgba(255,0,0,0.3); }
  to { background: transparent; }
}

.flash-red {
  animation: flash-red 0.3s;
}

@keyframes flash-green {
  from { background: rgba(0,255,0,0.3); }
  to { background: transparent; }
}

.flash-green {
  animation: flash-green 0.3s;
}

